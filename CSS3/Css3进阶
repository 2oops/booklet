# Css3进阶

1. `float`和`absolute`是兄弟关系

2. ```css
   .cover { //无固定width/height容器内的绝对定位元素拉伸
   	position: absolute; 
   	left: 0; top: 0; right: 0; bottom: 0;
   	background-color: #fff;
   	opacity: .5; filter: alpha(opacity=50);
   }
   
   .overlay { //没有宽度和高度声明实现的全屏自适应效果
       position: absolute;
   	left: 0; top: 0; right: 0; bottom: 0;
   	background-color: #000;
   	opacity: .5; filter: alpha(opacity=50);
   }
   ```

3. ```html
   <!doctype html> //高度自适应的九宫格效果
   <html>
   <head>
   <meta charset="utf-8">
   <title>高度自适应的九宫格效果</title>
   <style>
   html, body { height: 100%; margin: 0; }
   .page {
       position: absolute;
   	left: 0; top: 0; right: 0; bottom: 0;
   }
   .list {
   	float: left;
   	height: 33.3%; width: 33.3%;
   	position: relative;
   }
   .list:before {
   	content: '';
   	position: absolute;
   	left: 10px; right: 10px; top: 10px; bottom: 10px;
   	border-radius: 10px;
   	background-color: #cad5eb;
   }
   .list:after {
   	content:attr(data-index);
   	position: absolute;
   	height: 30px;
   	left: 0; right: 0; top: 0; bottom: 0;
   	margin: auto;
   	text-align: center;
   	font: 24px/30px bold 'microsoft yahei';
   }
   </style>
   </head>
   
   <body>
   <div class="page">
   	<div class="list" data-index="1"></div>
       <div class="list" data-index="2"></div>
       <div class="list" data-index="3"></div>
       <div class="list" data-index="4"></div>
       <div class="list" data-index="5"></div>
       <div class="list" data-index="6"></div>
       <div class="list" data-index="7"></div>
       <div class="list" data-index="8"></div>
       <div class="list" data-index="9"></div>
   </div>
   </body>
   </html>
   ```

4. ```css
   .image {
       position: absolute; left: 0; right: 0; width: 50%; //width>拉伸
       margin:auto;//添加改行后实现绝对定位居中布局
   }
   ```

5. ```css
   .content {  //整体布局
       position: absolute;
       top: 48px;
       bottom: 52px;
       left: 252px;//如果有侧边栏
       overflow: auto;
   }
   ```

6. ```
   .overlay {
       position: absolute;
       top: 0;right: 0;bottom: 0;left: 0;
       background-color: rgba(0,0,0,.5);
       z-index: 9;
   }
   
   <div class="page"></div>
   <div class="overlay"></div>
   ```

   *****

  7. `relative`

       1. 限制定位`left,right,top,bottom`，限制`z-index`(z-index设置为auto时在IE7+对内部元素不起限制作用)，限制`overflow`,relative限制不了`position:fixed`
       2. relative相对自身定位，`left，right`同时存在时绝对定位实现拉伸，相对定位则斗争。(left>right,top>bottom)
       3. 层叠上下文
       4. relative最小化影响原则：relative最小化，尽量避免使用relative

  8. `margin`

       1. ```css
          .list {
              margin-top: 15px;
              margin-bottom: 15px;
          }
          ```

       2. relative中使用百分比margin以宽度为准，absolute中使用百分比margin以上一定位元素为准

       3. ```css
          margin-left: auto;
          margin-right: auto;//两者都为auto时实现居中效果，但图片（block）不居中
          ```

       4. `width/height`限制了absolute元素自动填满容器

       5. ```css
          position: absolute;
          margin: auto;//自动平分被变更的尺寸空间实现居中
          ```

       6. margin负值可实现两端对齐`margin-left: -20px; margin-right: 20px;`

       7. 负值下实现等高布局`margin-bottom: -20px; padding-bottom: 20px;`必须使用`overflow: hidden`限制

       8. 负值下实现两栏自适应

       9. margin重叠  `margin-start,margin-end`，设置`direction: ltl`，`writing-mode: vertical-lr;`